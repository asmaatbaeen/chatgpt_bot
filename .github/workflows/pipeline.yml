name: build, push and deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CONTAINER_REGISTRY_NAME: whereismytransport
  IMAGE_NAME: chatgptwimt

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        run: |
            sudo rm -rf /usr/share/dotnet
            sudo rm -rf /opt/ghc
            sudo rm -rf "/usr/local/share/boost"
            sudo rm -rf "$AGENT_TOOLSDIRECTORY"
            df -h
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Replace tokens with secrets
        run: |
          find . -type f -name "*.env" -exec sed -i 's#{openAiApiKeyTest}#${{ secrets.OPENAI_API_KEY_TEST }}#g' {} +
          find . -type f -name "*.env" -exec sed -i 's#{slackBotTokenTest}#${{ secrets.SLACK_BOT_TOKEN_TEST }}#g' {} +
          find . -type f -name "*.env" -exec sed -i 's#{slackAppTokenTest}#${{ secrets.SLACK_APP_TOKEN_TEST }}#g' {} +


      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: ./slack_bot
          # Without load: true, the resulting image is not loaded into docker, and thus not
          # accessible for pushing later on
          load: true
          push: false
          tags: ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Overwrite latest cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Login to ACR
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io
          username: ${{ vars.WHEREISMYTRANSPORT_ACR_USERNAME }}
          password: ${{ secrets.WHEREISMYTRANSPORT_ACR_PASSWORD }}

      - name: Push image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: docker push ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_number }}

      - name: Create artifact
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo ${{ github.run_number }} > build-artifact.txt

      - name: Publish artifact
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact.txt
          path: build-artifact.txt

  test:
    needs: build-and-push
    uses: ./.github/workflows/deploy.yaml
    with:
      cluster: preprod
      environment: test
      version: ${{ github.run_number }}
    secrets:
      registry-username: ${{ vars.WHEREISMYTRANSPORT_ACR_USERNAME }}
      registry-password: ${{ secrets.WHEREISMYTRANSPORT_ACR_PASSWORD }}
      azure-credentials: ${{ secrets.DATATOOLS_PREPROD_SERVICE_PRINCIPAL }}