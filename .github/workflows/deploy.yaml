name: deploy

on:
  workflow_call:
    inputs:
      # can be 'test' or 'prod'
      environment:
        required: true
        type: string
      # can be 'preprod' or 'prod'
      cluster:
        required: true
        type: string
      version:
        required: true
        type: string
    secrets:
      registry-username:
        required: true
      registry-password:
        required: true
      azure-credentials:
        required: true

env:
  CLUSTER_NAME: datatools-${{ inputs.cluster }}-aks
  CLUSTER_RESOURCE_GROUP: datatools-${{ inputs.cluster }}-group
  IMAGE_PULL_SECRET: chatgptwimt-imagepull-secret
  # due to an issue with the allowed scope of "env" in the main pipeline.yaml,
  # I was unsuccessfull in passing these values as inputs to this workflow:
  # see issue: https://github.com/actions/runner/issues/480
  REGISTRY_URL: whereismytransport.azurecr.io
  IMAGE_TAG: chatgptwimt:${{ inputs.version }}

jobs:
  deploy:
      runs-on: ubuntu-latest
      timeout-minutes: 5
      if: ${{ github.ref == 'refs/heads/main' }}
      steps:
        - uses: actions/checkout@main
        # Connect to Azure Container Registry (ACR)
        - uses: azure/docker-login@v1
          with:
            login-server: ${{ env.REGISTRY_URL }}
            username: ${{ secrets.registry-username }}
            password: ${{ secrets.registry-password }}

        - uses: azure/login@v1
          with:
            creds: "${{ secrets.azure-credentials }}"

        # Set the target AKS cluster
        - uses: azure/aks-set-context@v3
          with:
            cluster-name: ${{ env.CLUSTER_NAME }}
            resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

        # Create image pull secret for ACR
        - uses: azure/k8s-create-secret@v3
          with:
            container-registry-url: ${{ env.REGISTRY_URL }}
            container-registry-username: ${{ secrets.registry-username }}
            container-registry-password: ${{ secrets.registry-password }}
            secret-name: ${{ env.IMAGE_PULL_SECRET }}
            arguments: --force true
            namespace: ${{ inputs.environment }}

        - name: Replace tokens in k8s yaml
          run: find ./kubernetes -type f -name "*.yaml" -exec sed -i 's/{buildNumber}/${{ inputs.version }}/g' {} +

        # Create deployable manifest using kustomize
        - uses: azure/k8s-bake@v2.2
          with:
            renderEngine: "kustomize"
            silent: "false"
            kustomizationPath: "./kubernetes/${{ inputs.environment }}"
            kubectl-version: "latest"
          id: bake

        # Deploy app to AKS
        - uses: Azure/k8s-deploy@v4
          with:
            namespace: ${{ inputs.environment }}
            manifests: ${{ steps.bake.outputs.manifestsBundle }}
            images: |
              ${{ env.REGISTRY_URL }}/${{ env.IMAGE_TAG }}
            imagepullsecrets: |
              ${{ env.IMAGE_PULL_SECRET }}
